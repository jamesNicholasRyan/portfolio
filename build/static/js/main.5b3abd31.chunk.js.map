{"version":3,"sources":["components/Ocean.js","components/Tree.js","App.js","reportWebVitals.js","index.js"],"names":["Ocean","props","p","canvas","canvasHeight","bubbles","dusts","dustSpeed","bubbleSpeed","volcanoes","x","y","volcanoBubble","Bubble","random","randomSpeed","push","interval","setTimeout","array","setup","createCanvas","windowWidth","position","style","i","bubble","dust","Dust","draw","mouseVector","createVector","mouseX","mouseY","color1","color","color2","w","h","c1","c2","noFill","inter","map","c","lerpColor","stroke","line","setGradient","width","height","forEach","display","move","drag","checkSides","checkDeath","boyancy","location","dist","applyForce","force","sub","distance","mag","constrain","normalize","strength","mult","pushingForce","lifeSpan","length","outOfBounds","newBubble","index","indexOf","splice","isDead","newDust","fill","beginShape","vertex","endShape","CLOSE","windowResized","resizeCanvas","windowHeight","mousePressed","clicked","Particle","X","Y","d","v1","v2","this","acceleration","velocity","diameter","noStroke","ellipse","add","speed","dragMagnitude","boyance","lift","other","otherLocation","console","log","sum","p5","Vector","count","diff","div","setMag","steer","limit","myRef","React","createRef","myP5","current","ref","Component","Tree","leaves","flock","bugs","leafSpeed","PI","gravity","xPosition","yPosition","leaf","Leaf","Math","ceil","calculateAge","Bird","Bug","boid","checkEdges","grow","isFalling","checkBottomCollision","createWind","colorArray","xoff","yoff","translate","rotate","rectMode","CENTER","rect","pop","gap","gap2","xWind","noise","yWind","windVector","Boid","random2D","maxForce","maxSpeed","perceptionRadius","strokeWeight","boids","steering","total","limitLocationBottom","limitLocationTop","distBottom","distTop","alignment","align","cohesion","separation","contain","heading","radians","triangle","triangleSize","App","className","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b3abd31.chunk.js","sourcesContent":["import React from 'react'\r\nimport p5 from 'p5'\r\n\r\nclass Ocean extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.myRef = React.createRef()\r\n  }\r\n\r\n  Ocean = (p) => {\r\n    \r\n    const canvasHeight = 2000\r\n    const bubbleCount = 30\r\n    const dustCount = 50\r\n    let bubbles = []\r\n    let dusts = []\r\n    var canvas\r\n    const dustSpeed = [-0.3, 0.3]\r\n    const bubbleSpeed = [-10, 10]\r\n\r\n    p.setup = () => {\r\n      canvas = p.createCanvas(p.windowWidth, canvasHeight)\r\n      canvas.position(0,canvasHeight)\r\n      canvas.style('z-index', '-1')\r\n      for (let i = 0; i < bubbleCount; i++) {\r\n        const bubble = new Bubble(p.random(p.windowWidth), p.random(canvasHeight), p.random(1,45), randomSpeed(bubbleSpeed), randomSpeed(bubbleSpeed))\r\n        bubbles.push(bubble)\r\n      }\r\n      for (let i = 0; i < dustCount; i++) {\r\n        const dust = new Dust(p.random(p.windowWidth), p.random(canvasHeight), p.random(4,7), randomSpeed(dustSpeed), randomSpeed(dustSpeed))\r\n        dusts.push(dust)\r\n      }\r\n\r\n    }\r\n\r\n    p.draw = () => {\r\n      const mouseVector = p.createVector(p.mouseX, p.mouseY)\r\n      const color1 = p.color(18,126,190)\r\n      const color2 = p.color(0, 10, 20)\r\n      setGradient(0,0,p.width,p.height,color1,color2)\r\n      bubbles.forEach((bubble) => {\r\n        bubble.display()\r\n        bubble.move()\r\n        bubble.drag()\r\n        bubble.checkSides()\r\n        bubble.checkDeath()\r\n        bubble.boyancy()\r\n\r\n        const dist = bubble.location.dist(mouseVector)\r\n        if ((dist < 100)) {\r\n          bubble.applyForce(pushingForce(bubble).mult(-1))\r\n        }\r\n      })\r\n      dusts.forEach((dust) => {\r\n        dust.display()\r\n        dust.move()\r\n        dust.checkSides()\r\n      })\r\n      \r\n      bubbles.forEach((bubble) => {\r\n        if (bubble.lifeSpan < 0) {\r\n          if ((bubbles.length < 60) && (!bubble.outOfBounds)) {\r\n            for (let i = 0; i < 2; i++) {\r\n              const newBubble = new Bubble(bubble.location.x, bubble.location.y, p.random(10,30), randomSpeed(bubbleSpeed), randomSpeed(bubbleSpeed))\r\n              bubbles.push(newBubble)\r\n            }\r\n          }\r\n          const index = bubbles.indexOf(bubble)\r\n          bubbles.splice(index, 1)\r\n        }\r\n      })\r\n\r\n      dusts.forEach((dust) => {\r\n        if (dust.isDead === true) {\r\n          const newDust = new Dust(p.random(p.windowWidth), p.random(canvasHeight), p.random(4,8), randomSpeed(dustSpeed), randomSpeed(dustSpeed))\r\n          dusts.push(newDust)\r\n          const index = dusts.indexOf(dust)\r\n          dusts.splice(index, 1)\r\n        }\r\n      })\r\n\r\n      if (bubbles.length < 50) {\r\n        const bubble = new Bubble(p.random(p.windowWidth), p.random(canvasHeight), p.random(1,5), randomSpeed(bubbleSpeed), randomSpeed(bubbleSpeed))\r\n        bubbles.push(bubble)\r\n      }\r\n\r\n      drawBottom()\r\n\r\n    }\r\n\r\n    function volcanoes(x, y) {\r\n      const bubbleSpeedUp = [15, 20]\r\n      const bubbleSpeedSide = [-3, 3]\r\n      const volcanoBubble = new Bubble(x, y, p.random(1,5), randomSpeed(bubbleSpeedSide), randomSpeed(bubbleSpeedUp))\r\n      bubbles.push(volcanoBubble)\r\n      const interval = randomSpeed([1200,2000])\r\n      setTimeout(() => volcanoes(x, y), interval)\r\n    }\r\n\r\n    p.windowResized = () => {\r\n      p.resizeCanvas(p.windowWidth, p.windowHeight)\r\n    }\r\n\r\n    p.mousePressed = () => {\r\n      bubbles.forEach((bubble) => {\r\n        bubble.clicked()\r\n      })\r\n    }\r\n\r\n    function pushingForce(bubble) {\r\n      const mousePosition = p.createVector(p.mouseX, p.mouseY)\r\n      const force = mousePosition.sub(bubble.location)\r\n      let distance = force.mag()\r\n      distance = p.constrain(distance,5.0,25.0)\r\n\r\n      force.normalize()\r\n      const strength = (0.04 * 20 * 20) / (distance * distance)\r\n      force.mult(strength)\r\n      return force\r\n    }\r\n\r\n    function setGradient(x,y,w,h,c1,c2) {\r\n      p.noFill()\r\n      for (let i = y; i <= y + h; i++) {\r\n        let inter = p.map(i, y, y + h, 0, 1)\r\n        let c = p.lerpColor(c1, c2, inter)\r\n        p.stroke(c)\r\n        p.line(x, i, x + w, i)\r\n      }\r\n    }\r\n\r\n    function randomSpeed(array) {\r\n      return p.random(array[0], array[1])\r\n    }\r\n\r\n    function drawBottom() {\r\n      p.fill(0, 5, 10)\r\n      p.beginShape()\r\n      p.vertex(0, p.height-30)\r\n      p.vertex(p.width/7, p.height-60)\r\n      p.vertex(p.width/6, p.height-70)\r\n      p.vertex(p.width/5, p.height-100)\r\n      p.vertex(p.width/4, p.height-70)\r\n      p.vertex(p.width/3, p.height-60)\r\n      p.vertex(p.width/2, p.height-70)\r\n      p.vertex(p.width*0.6, p.height-60)\r\n      p.vertex(p.width*0.75, p.height-70)\r\n      p.vertex(p.width*0.8, p.height-100)\r\n      p.vertex(p.width*0.86, p.height-70)\r\n      p.vertex(p.width*0.88, p.height-60)\r\n      p.vertex(p.width, p.height-30)\r\n      p.vertex(p.width, p.height)\r\n      p.vertex(0, p.height)\r\n      p.endShape(p.CLOSE)\r\n    }\r\n\r\n\r\n    \r\n    // --------------------------- CLASSES ---------------------------------------- // \r\n    class Particle {\r\n      constructor(X, Y, d, v1, v2) {\r\n        this.location = p.createVector(X, Y)\r\n        this.acceleration = p.createVector(0, 0)\r\n        this.velocity = p.createVector(v1, v2)\r\n        this.diameter = d\r\n        this.isDead = false\r\n        this.lifeSpan = d\r\n        this.outOfBounds = false\r\n        this.color = p.color(p.random(0,116),p.random(184,188),p.random(200,222))\r\n        this.color2 = p.color(157,219,234)\r\n      }\r\n\r\n      display() {\r\n        p.noStroke()\r\n        p.fill(this.color)\r\n        p.ellipse(this.location.x, this.location.y, this.lifeSpan, this.lifeSpan)\r\n        p.fill(this.color2)\r\n        p.ellipse(this.location.x + (this.lifeSpan/5), this.location.y - (this.lifeSpan/5), this.lifeSpan/3, this.lifeSpan/3)\r\n      }\r\n\r\n      move() {\r\n        this.velocity.add(this.acceleration)\r\n        this.location.add(this.velocity)\r\n        // this.acceleration.mult(0)\r\n      }\r\n\r\n      applyForce(force) {\r\n        this.acceleration.add(force)\r\n      }\r\n\r\n      drag() {\r\n        const dragCeof = 0.01\r\n        const speed = this.velocity.mag()\r\n        const dragMagnitude = dragCeof * speed * speed\r\n        const drag = this.velocity.mult(-1)\r\n        drag.normalize()\r\n        drag.mult(dragMagnitude)\r\n        this.applyForce(drag)\r\n      }\r\n\r\n      checkSides() {\r\n        if ((this.location.x < (0-this.diameter)) || (this.location.x > (p.windowWidth + this.diameter)) \r\n          || (this.location.y > canvasHeight+this.diameter) || (this.location.y < 0-this.diameter)) {\r\n          this.isDead = true\r\n          this.outOfBounds = true\r\n        }\r\n      }\r\n    }\r\n\r\n// -------------------------------------------------------------------------------------------------------------------- //\r\n    class Bubble extends Particle {\r\n      constructor(X, Y, d, v1, v2) {\r\n        super(X, Y, d, v1, v2)\r\n      }\r\n\r\n      checkDeath() {\r\n        if (this.lifeSpan > 50) {\r\n          this.isDead = true\r\n        }\r\n        if (this.isDead === true) {\r\n          this.color = p.color(157,219,255)\r\n          this.color2 = p.color(157,219,255)\r\n          this.lifeSpan = this.lifeSpan - 3\r\n        } else if (this.isDead === false) {\r\n          this.lifeSpan = this.lifeSpan + 0.03\r\n        }\r\n      }\r\n\r\n      clicked() {\r\n        const mouseVector = p.createVector(p.mouseX, p.mouseY)\r\n        const dist = this.location.dist(mouseVector)\r\n        if (dist < this.lifeSpan/2) {\r\n          this.isDead = true\r\n        }\r\n      }\r\n\r\n      boyancy() {\r\n        let boyance\r\n        let lift\r\n        if (this.location.y > canvasHeight/5) {\r\n          lift = p.map(this.location.y, canvasHeight/5, canvasHeight, 0, -0.008)\r\n          boyance = p.createVector(0, lift)\r\n        } else {\r\n          boyance = p.createVector(0,0)\r\n        }\r\n        // console.log(boyance)\r\n        this.applyForce(boyance)\r\n      }\r\n\r\n      checkCollision(other) {\r\n        const otherLocation = other.location\r\n        // const mouseVector = p.createVector(p.mosueX, p.mouseY)\r\n        const dist = this.location.dist(otherLocation)\r\n        if (dist < ((other.lifeSpan/2)+(this.lifeSpan/2))) {\r\n          console.log('collision!')\r\n          this.color = p.color(255)\r\n          this.velocity.x = this.velocity.x * -1\r\n          this.velocity.y = this.velocity.y * -1\r\n          // this.isDead = true\r\n        }\r\n      }\r\n\r\n      separate(bubbles) {\r\n        // console.log('separating!')\r\n        const maxSpeed = 300\r\n        const maxForce = 300\r\n        let sum = new p5.Vector()\r\n        let count = 0\r\n        const desiredSeparation = 20\r\n        bubbles.forEach((bubble) => {\r\n          const distance = this.location.dist(bubble.location)\r\n          if ((distance > 0) && (distance < desiredSeparation)) {\r\n            console.log('spearating!!!!')\r\n            let diff = p.createVector()\r\n            diff = this.location.sub(bubble.location)\r\n            diff.normalize()\r\n            diff.div(distance)\r\n            sum.add(diff)\r\n            count ++\r\n          }\r\n        })\r\n        if (count > 0) {\r\n          sum.div(count)\r\n          sum.setMag(maxSpeed)\r\n          const steer = sum.sub(this.velocity)\r\n          steer.limit(maxForce)\r\n          this.applyForce(steer)\r\n        }\r\n      }\r\n    }\r\n\r\n    // ------------------------------------------------------------------------------------------ //\r\n    class Dust extends Particle {\r\n      constructor(X, Y, d, v1, v2) {\r\n        super(X, Y, d, v1, v2)\r\n        this.color = p.color(p.random(100,170), p.random(100,170))\r\n      }\r\n\r\n      display() {\r\n        p.noStroke()\r\n        p.fill(this.color)\r\n        p.ellipse(this.location.x, this.location.y, this.lifeSpan, this.lifeSpan)\r\n      }\r\n    }\r\n    // ---------------------------------------------------------------------------------------- //\r\n\r\n\r\n    volcanoes(p.windowWidth/5, canvasHeight-100)\r\n    volcanoes(p.windowWidth*0.8, canvasHeight-100)\r\n  }\r\n\r\n// ______________________________________________________________________________________________________ //\r\n  componentDidMount() {\r\n    this.myP5 = new p5(this.Ocean, this.myRef.current)\r\n  }\r\n\r\n  render() {\r\n    return <div ref={this.myRef}>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport {\r\n  Ocean\r\n}\r\n","import React from 'react'\r\nimport p5 from 'p5'\r\nimport { Boid, Bug, Bird } from './bug'\r\n\r\nclass Tree extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.myRef = React.createRef()\r\n  }\r\n\r\n  Tree = (p) => {\r\n    // Bubble[] bubbles = new Bubble[10]\r\n    const canvasHeight = 2000\r\n    const leaveCount = 100\r\n    const dustCount = 50\r\n    const birdCount = 10\r\n    const bugCount = 15\r\n    let leaves = []\r\n    let dusts = []\r\n    let flock = []\r\n    let bugs = []\r\n    var canvas\r\n    const dustSpeed = [-0.3, 0.3]\r\n    // const bubbleSpeed = [-10, 10]\r\n    let angle = p.PI/6\r\n    const leafSpeed = 0.7\r\n    const gravity = p.createVector(0, 1)\r\n\r\n\r\n    p.setup = () => {\r\n      canvas = p.createCanvas(p.windowWidth, canvasHeight)\r\n      canvas.position(0,0)\r\n      canvas.style('z-index', '-1')\r\n      const color1 = p.color(18,126,190)\r\n      const color2 = p.color(255)\r\n      setGradient(0,0,p.width,p.height,color1,color2)\r\n      for (let i = 0; i < leaveCount; i++) {\r\n        const xPosition = p.random(0, p.windowWidth)\r\n        const yPosition = p.random(150, 250)\r\n        const leaf = new Leaf(Math.ceil(xPosition/20)*20, Math.ceil(yPosition/20)*20, 1, 0, 0, p.random(1,385))\r\n        leaf.calculateAge()\r\n        leaves.push(leaf)\r\n      }\r\n      for (let i = 0; i < dustCount; i++) {\r\n        const dust = new Dust(p.random(p.windowWidth), p.random(canvasHeight), p.random(4,7), randomSpeed(dustSpeed), randomSpeed(dustSpeed))\r\n        dusts.push(dust)\r\n      }\r\n      for (let i = 0; i < birdCount; i++) {\r\n        flock.push(new Bird())\r\n      }\r\n      for (let i = 0; i < bugCount; i++) {\r\n        bugs.push(new Bug())\r\n      }\r\n    }\r\n\r\n    p.draw = () => {\r\n      const mouseVector = p.createVector(p.mouseX, p.mouseY)\r\n      const color1 = p.color(18,126,190)\r\n      const color2 = p.color(255)\r\n      setGradient(0,0,p.width,p.height,color1,color2)\r\n      dusts.forEach((dust) => {\r\n        dust.display()\r\n        dust.move()\r\n        dust.checkSides()\r\n      })\r\n\r\n      for (let boid of flock) {\r\n        boid.flock(flock)\r\n        boid.move()\r\n        boid.display()\r\n        boid.checkEdges()\r\n      }\r\n      for (let boid of bugs) {\r\n        boid.flock(bugs)\r\n        boid.move()\r\n        boid.display()\r\n        boid.checkEdges()\r\n      }\r\n\r\n      drawTopBox()\r\n      drawBottom()\r\n      // drawCollisionBox1()\r\n      // drawCollisionBox2()\r\n      // drawCollisionBox3()\r\n      leaves.forEach((leaf) => {\r\n        leaf.display()\r\n        leaf.grow()\r\n        leaf.checkSides()\r\n        \r\n        if ((leaf.isFalling) && (!leaf.checkBottomCollision())) {\r\n          const dist = leaf.location.dist(mouseVector)\r\n          leaf.move()\r\n          leaf.applyForce(gravity)\r\n          leaf.drag()\r\n          // leaf.applyForce(leaf.createWind())\r\n          if ((dist < 150)) {\r\n            leaf.applyForce(pushingForce(leaf).mult(-20))\r\n          } else {\r\n            leaf.applyForce(leaf.createWind())\r\n          }\r\n        } else if (leaf.checkBottomCollision()) {\r\n          console.log('collison!')\r\n          leaf.isFalling = false\r\n        }\r\n\r\n        if (leaf.isDead) {\r\n          const index = leaves.indexOf(leaf)\r\n          leaves.splice(index, 1)\r\n        }\r\n      })\r\n\r\n\r\n      dusts.forEach((dust) => {\r\n        if (dust.isDead === true) {\r\n          const newDust = new Dust(p.random(p.windowWidth), p.random(canvasHeight), p.random(4,8), randomSpeed(dustSpeed), randomSpeed(dustSpeed))\r\n          dusts.push(newDust)\r\n          const index = dusts.indexOf(dust)\r\n          dusts.splice(index, 1)\r\n        }\r\n      })\r\n\r\n      if (leaves.length < leaveCount) {\r\n        console.log('makin more leaves!')\r\n        const leaf = new Leaf(p.random(1)*p.width, p.random(175, 250), 1, 0, 0, 1)\r\n        leaf.calculateAge()\r\n        leaves.push(leaf)\r\n      }\r\n\r\n    }\r\n\r\n    p.windowResized = () => {\r\n      p.resizeCanvas(p.windowWidth, canvasHeight)\r\n    }\r\n\r\n    // p.mousePressed = () => {\r\n    //   bubbles.forEach((bubble) => {\r\n    //     bubble.clicked()\r\n    //   })\r\n    // }\r\n\r\n    function pushingForce(leaf) {\r\n      console.log('pushing leaves!')\r\n      const mousePosition = p.createVector(p.mouseX, p.mouseY)\r\n      const force = mousePosition.sub(leaf.location)\r\n      let distance = force.mag()\r\n      distance = p.constrain(distance,5.0,13.0)\r\n\r\n      force.normalize()\r\n      const strength = (0.04 * 20 * 20) / (distance * distance)\r\n      force.mult(strength)\r\n      return force\r\n    }\r\n\r\n    function setGradient(x,y,w,h,c1,c2) {\r\n      p.noFill()\r\n      for (let i = y; i <= y + h; i++) {\r\n        let inter = p.map(i, y, y + h, 0, 1)\r\n        let c = p.lerpColor(c1, c2, inter)\r\n        p.stroke(c)\r\n        p.line(x, i, x + w, i)\r\n      }\r\n    }\r\n\r\n    function randomSpeed(array) {\r\n      return p.random(array[0], array[1])\r\n    }\r\n\r\n    function drawBottom() {\r\n      p.fill(0, 15, 30)\r\n      p.beginShape()\r\n      p.vertex(0, p.height-90)\r\n      p.vertex(p.width/7, p.height-60)\r\n      p.vertex(p.width/6, p.height-70)\r\n      p.vertex(p.width/5, p.height-80)\r\n      p.vertex(p.width/4, p.height-70)\r\n      p.vertex(p.width/3, p.height-120)\r\n      p.vertex(p.width*0.666, p.height-120)\r\n      p.vertex(p.width*0.75, p.height-70)\r\n      p.vertex(p.width*0.80, p.height-80)\r\n      p.vertex(p.width*0.88, p.height-70)\r\n      p.vertex(p.width, p.height-90)\r\n      p.vertex(p.width, p.height)\r\n      p.vertex(0, p.height)\r\n      p.endShape(p.CLOSE)\r\n    }\r\n\r\n    function drawTopBox() {\r\n      p.fill(0, 14, 30)\r\n      p.beginShape()\r\n      p.vertex(0, 0)\r\n      p.vertex(p.width, 0)\r\n      p.vertex(p.width, 175)\r\n      p.vertex(0, 175)\r\n      p.endShape(p.CLOSE)\r\n    }\r\n\r\n    function drawCollisionBox1() {\r\n      p.fill(255, 15, 30)\r\n      p.rect(0, p.height-60, p.width)\r\n    }\r\n    function drawCollisionBox2() {\r\n      p.fill(255, 15, 30)\r\n      p.rect(p.width*0.29, p.height-90, p.width*0.42)\r\n    }\r\n    function drawCollisionBox3() {\r\n      p.fill(255, 15, 30)\r\n      p.rect(p.width*0.33, p.height-118, p.width*0.34)\r\n    }\r\n\r\n    function fractalTrees() {\r\n      p.stroke(0, 15, 30)\r\n      p.push()\r\n      p.translate(p.width*0.07, 0)\r\n      fractal(100)\r\n      for (let i = 0; i < 6; i++) {\r\n        p.translate(p.width*0.14, -100)\r\n        fractal(100)\r\n      }\r\n      p.pop()\r\n      p.translate(p.width*0.07, 0)\r\n      fractal(100)\r\n      for (let i = 0; i < 6; i++) {\r\n        p.translate(p.width*0.7, -200)\r\n        fractal(100)\r\n      }\r\n    }\r\n\r\n    function fractal(len) {\r\n      // angle = p.random(0,p.PI/3)\r\n      // const angle = p.PI/3\r\n      \r\n      p.strokeWeight(8)\r\n      p.line(0, 0, 0, len)\r\n      p.translate(0, len)\r\n      len *= 0.67\r\n      if (len > 5) {\r\n        p.push()\r\n        p.rotate(angle)\r\n        fractal(len)\r\n        p.pop()\r\n        p.push()\r\n        p.rotate(-angle)\r\n        fractal(len)\r\n        p.pop()\r\n      }\r\n    }\r\n\r\n\r\n\r\n    \r\n    // --------------------------- CLASSES ---------------------------------------- // \r\n    class Particle {\r\n      constructor(X, Y, d, v1, v2) {\r\n        this.location = p.createVector(X, Y)\r\n        this.acceleration = p.createVector(0, 0)\r\n        this.velocity = p.createVector(v1, v2)\r\n        this.diameter = d\r\n        this.isDead = false\r\n        this.lifeSpan = d\r\n        this.outOfBounds = false\r\n        this.color = p.color(p.random(0,116),p.random(184,188),p.random(200,222))\r\n        this.color2 = p.color(157,219,234)\r\n      }\r\n\r\n      display() {\r\n        p.noStroke()\r\n        p.fill(this.color)\r\n        p.ellipse(this.location.x, this.location.y, this.lifeSpan, this.lifeSpan)\r\n        p.fill(this.color2)\r\n        p.ellipse(this.location.x + (this.lifeSpan/5), this.location.y - (this.lifeSpan/5), this.lifeSpan/3, this.lifeSpan/3)\r\n      }\r\n\r\n      move() {\r\n        this.velocity.add(this.acceleration)\r\n        this.location.add(this.velocity)\r\n        this.acceleration.mult(0)\r\n      }\r\n\r\n      applyForce(force) {\r\n        this.acceleration.add(force)\r\n      }\r\n\r\n      drag() {\r\n        const dragCeof = 0.0001\r\n        const speed = this.velocity.mag()\r\n        const dragMagnitude = dragCeof * speed * speed\r\n        const drag = this.velocity.mult(-1)\r\n        drag.normalize()\r\n        drag.mult(dragMagnitude)\r\n        this.applyForce(drag)\r\n      }\r\n\r\n      checkSides() {\r\n        if ((this.location.x < (0-this.diameter)) || (this.location.x > (p.windowWidth + this.diameter)) \r\n          || (this.location.y > canvasHeight+this.diameter) || (this.location.y < 0-this.diameter)) {\r\n          this.isDead = true\r\n          this.outOfBounds = true\r\n        }\r\n      }\r\n    }\r\n\r\n// -------------------------------------------------------------------------------------------------------------------- //\r\n    class Leaf extends Particle {\r\n      constructor(X, Y, d, v1, v2, lifeSpan) {\r\n        super(X, Y, d, v1, v2, lifeSpan)\r\n        this.location = p.createVector(X, Y)\r\n        this.acceleration = p.createVector(0, 0)\r\n        this.velocity = p.createVector(v1, v2)\r\n        this.diameter = d\r\n        this.isDead = false\r\n        this.lifeSpan = lifeSpan\r\n        this.outOfBounds = false\r\n        this.color1 = p.color(0, 255, 140)\r\n        this.colorArray = [0, 255, 140]\r\n        this.isFalling = false\r\n        this.xoff = p.random(100)\r\n        this.yoff = p.random(100)\r\n      }\r\n\r\n      display() {\r\n        p.push()\r\n        p.noStroke()\r\n        p.fill(this.color1)\r\n        p.translate(this.location.x, this.location.y)\r\n        p.rotate(p.PI/4)\r\n        p.rectMode(p.CENTER)\r\n        p.rect(0, 0, this.diameter)\r\n        p.pop()\r\n      }\r\n\r\n      calculateAge() {\r\n        if (this.lifeSpan < 130) {\r\n          const gap = 140-this.lifeSpan\r\n          this.color1 = p.color(0, 255, gap)\r\n          this.colorArray = [0, 255, gap]\r\n        } else if (this.lifeSpan < 385) {\r\n          const gap = this.lifeSpan-130\r\n          this.color1 = p.color(gap, 255, 10)\r\n          this.colorArray = [gap, 255, 10]\r\n        } else if (this.lifeSpan < 640) {\r\n          const gap = this.lifeSpan-385\r\n          const gap2 = 255-gap\r\n          this.color1 = p.color(255, gap2, 10)\r\n          this.colorArray = [255, gap2, 10]\r\n        }\r\n        if (this.lifeSpan < 20) {\r\n          this.diameter = this.lifeSpan\r\n        } else {\r\n          this.diameter = 20\r\n        }\r\n      }\r\n\r\n      grow() {\r\n        if (this.diameter < 20) {\r\n          this.diameter = this.diameter + leafSpeed/9\r\n        }\r\n\r\n        if (this.lifeSpan < 130) {\r\n          // console.log('blue now!')\r\n          this.colorArray[2] = this.colorArray[2] - leafSpeed/2\r\n          this.lifeSpan = this.lifeSpan + leafSpeed/2\r\n        } else if (this.lifeSpan < 385) {\r\n          // console.log('red now!')\r\n          this.colorArray[0] = this.colorArray[0] + leafSpeed/4\r\n          this.lifeSpan = this.lifeSpan + leafSpeed/4\r\n        } else if (this.lifeSpan < 640) {\r\n          // console.log('green now!')\r\n          this.colorArray[1] = this.colorArray[1] - leafSpeed/5\r\n          this.lifeSpan = this.lifeSpan + leafSpeed/5\r\n          this.isFalling = true\r\n        } else if (this.lifeSpan > 640) {\r\n          // console.log('leaf is dead')\r\n          this.isDead = true\r\n        }\r\n        this.color1  = p.color(this.colorArray[0], this.colorArray[1], this.colorArray[2])\r\n      }\r\n\r\n      createWind() {\r\n        const xWind = p.map(p.noise(this.xoff), 0, 1, -1.5, 1.5 )\r\n        const yWind = p.map(p.noise(this.yoff), 0, 1, -1, 2 )\r\n        const windVector = p.createVector(xWind, yWind)\r\n        this.xoff = this.xoff + 0.01\r\n        this.yoff = this.yoff + 0.01\r\n        return windVector\r\n      }\r\n\r\n      checkBottomCollision() {\r\n        // console.log(this.location.y)\r\n        if ((this.location.y > p.height-120) && (this.location.x > p.width*0.33) && (this.location.x < p.width*0.67)) {\r\n          // p.width*0.33, p.height-118, p.width*0.34\r\n          this.location.y = p.height - 119\r\n          this.velocity = p.createVector(0,0)\r\n          this.acceleration = p.createVector(0,0)\r\n          return true\r\n        } else if((this.location.y > p.height-90) && (this.location.x > p.width*0.29) && (this.location.x < p.width*0.71)) {\r\n          // p.width*0.29, p.height-90, p.width*0.42\r\n          this.location.y = p.height - 89\r\n          this.velocity = p.createVector(0,0)\r\n          this.acceleration = p.createVector(0,0)\r\n          return true\r\n        } else if (this.location.y > p.height - 60) {\r\n          this.location.y = p.height - 59\r\n          this.velocity = p.createVector(0,0)\r\n          this.acceleration = p.createVector(0,0)\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n      }\r\n\r\n      // checkDeath() {\r\n      //   if (this.lifeSpan > 640) {\r\n      //     this.isDead = true\r\n      //   }\r\n      // }\r\n\r\n      // clicked() {\r\n      //   const mouseVector = p.createVector(p.mouseX, p.mouseY)\r\n      //   const dist = this.location.dist(mouseVector)\r\n      //   if (dist < this.lifeSpan/2) {\r\n      //     this.isDead = true\r\n      //   }\r\n      // }\r\n\r\n      // checkCollision(other) {\r\n      //   const otherLocation = other.location\r\n      //   // const mouseVector = p.createVector(p.mosueX, p.mouseY)\r\n      //   const dist = this.location.dist(otherLocation)\r\n      //   if (dist < ((other.lifeSpan/2)+(this.lifeSpan/2))) {\r\n      //     console.log('collision!')\r\n      //     this.color = p.color(255)\r\n      //     this.velocity.x = this.velocity.x * -1\r\n      //     this.velocity.y = this.velocity.y * -1\r\n      //     // this.isDead = true\r\n      //   }\r\n      // }\r\n\r\n      // separate(bubbles) {\r\n      //   // console.log('separating!')\r\n      //   const maxSpeed = 300\r\n      //   const maxForce = 300\r\n      //   let sum = new p5.Vector()\r\n      //   let count = 0\r\n      //   const desiredSeparation = 20\r\n      //   bubbles.forEach((bubble) => {\r\n      //     const distance = this.location.dist(bubble.location)\r\n      //     if ((distance > 0) && (distance < desiredSeparation)) {\r\n      //       console.log('spearating!!!!')\r\n      //       let diff = p.createVector()\r\n      //       diff = this.location.sub(bubble.location)\r\n      //       diff.normalize()\r\n      //       diff.div(distance)\r\n      //       sum.add(diff)\r\n      //       count ++\r\n      //     }\r\n      //   })\r\n      //   if (count > 0) {\r\n      //     sum.div(count)\r\n      //     sum.setMag(maxSpeed)\r\n      //     const steer = sum.sub(this.velocity)\r\n      //     steer.limit(maxForce)\r\n      //     this.applyForce(steer)\r\n      //   }\r\n      // }\r\n    }\r\n\r\n    // ------------------------------------------------------------------------------------------ //\r\n    class Dust extends Particle {\r\n      constructor(X, Y, d, v1, v2) {\r\n        super(X, Y, d, v1, v2)\r\n        this.color = p.color(p.random(100,170), p.random(100,170))\r\n      }\r\n\r\n      display() {\r\n        p.noStroke()\r\n        p.fill(this.color)\r\n        p.ellipse(this.location.x, this.location.y, this.lifeSpan, this.lifeSpan)\r\n      }\r\n    }\r\n\r\n    // -----------------------------------  BOID  ----------------------------------------------------- //\r\n    class Boid {\r\n      constructor() {\r\n        this.location = p.createVector(p.random(p.windowWidth), p.random(canvasHeight-700))\r\n        this.velocity = p5.Vector.random2D()\r\n        this.velocity.setMag(p.random(2, 4))\r\n        this.acceleration = p.createVector()\r\n        this.maxForce = 0.2\r\n        this.maxSpeed = 4\r\n        this.perceptionRadius = 100\r\n        this.diameter = 5\r\n        this.color = p.color(70, 200)\r\n      }\r\n\r\n      display() {\r\n        p.strokeWeight(16)\r\n        p.fill(this.color)\r\n        p.ellipse(this.location.x, this.location.y, this.diameter)\r\n      }\r\n\r\n      move() {\r\n        this.location.add(this.velocity)\r\n        this.velocity.add(this.acceleration)\r\n        this.velocity.limit(this.maxSpeed)\r\n        this.acceleration.mult(0)\r\n      }\r\n\r\n      checkEdges() {\r\n        if (this.location.x > p.width) {\r\n          this.location.x = 0 \r\n        } else if (this.location.x < 0) {\r\n          this.location.x = p.width\r\n        }\r\n        if (this.location.y > p.height) {\r\n          this.location.y = 0 \r\n        } else if (this.location.y < 0) {\r\n          this.location.y = p.height\r\n        }\r\n      }\r\n\r\n      align(boids) {\r\n        let steering = p.createVector()\r\n        let total = 0\r\n        for (let other of boids) {\r\n          const dist = p.dist(this.location.x, this.location.y, other.location.x, other.location.y)\r\n          if (other !== this && dist < this.perceptionRadius) {\r\n            steering.add(other.velocity)\r\n            total ++\r\n          }\r\n        }\r\n        if (total > 0) {\r\n          steering.div(total)\r\n          steering.setMag(this.maxSpeed)\r\n          steering.sub(this.velocity)\r\n          steering.limit(this.maxForce)\r\n        }\r\n        return steering\r\n      }\r\n\r\n      cohesion(boids) {\r\n        let steering = p.createVector()\r\n        let total = 0\r\n        for (let other of boids) {\r\n          const dist = p.dist(this.location.x, this.location.y, other.location.x, other.location.y)\r\n          if (other !== this && dist < this.perceptionRadius) {\r\n            steering.add(other.location)\r\n            total ++\r\n          }\r\n        }\r\n        if (total > 0) {\r\n          steering.div(total)\r\n          steering.sub(this.location)\r\n          steering.setMag(this.maxSpeed)\r\n          steering.sub(this.velocity)\r\n          steering.limit(this.maxForce)\r\n        }\r\n        return steering\r\n      }\r\n\r\n      separation(boids) {\r\n        let perceptionRadius = 100\r\n        let steering = p.createVector()\r\n        let total = 0\r\n        for (let other of boids) {\r\n          const dist = p.dist(this.location.x, this.location.y, other.location.x, other.location.y)\r\n          if (other !== this && dist < perceptionRadius) {\r\n            let diff = p5.Vector.sub(this.location, other.location)\r\n            diff.div(dist)\r\n            steering.add(diff)\r\n            total ++\r\n          }\r\n        }\r\n        if (total > 0) {\r\n          steering.div(total)\r\n          steering.setMag(this.maxSpeed)\r\n          steering.sub(this.velocity)\r\n          steering.limit(0.12)\r\n        }\r\n        return steering\r\n      }\r\n\r\n      contain() {\r\n        let perceptionRadius = 300\r\n        let steering = p.createVector()\r\n        let diff = p.createVector()\r\n        const limitLocationBottom = p.createVector(this.location.x, p.height-300)\r\n        const limitLocationTop = p.createVector(this.location.x, 0)\r\n        const distBottom = p.dist(this.location.x, this.location.y, limitLocationBottom.x, limitLocationBottom.y)\r\n        const distTop = p.dist(this.location.x, this.location.y, limitLocationTop.x, limitLocationTop.y)\r\n        if (distBottom < perceptionRadius) {\r\n          diff = p5.Vector.sub(this.location, limitLocationBottom)\r\n          diff.div(distBottom*2)\r\n          steering.add(diff)\r\n          steering.setMag(this.maxSpeed)\r\n          steering.sub(this.velocity)\r\n          steering.limit(0.1)\r\n        } else if (distTop < perceptionRadius) {\r\n          diff = p5.Vector.sub(this.location, limitLocationTop)\r\n          diff.div(distTop)\r\n          steering.add(diff)\r\n          steering.setMag(this.maxSpeed)\r\n          steering.sub(this.velocity)\r\n          steering.limit(0.1)\r\n        }\r\n        return steering\r\n      }\r\n\r\n      flock(boids) {\r\n        let alignment = this.align(boids)\r\n        let cohesion = this.cohesion(boids)\r\n        let separation = this.separation(boids)\r\n        let contain = this.contain()\r\n        this.acceleration.add(separation)\r\n        this.acceleration.add(alignment)\r\n        this.acceleration.add(cohesion)\r\n        this.acceleration.add(contain)\r\n      }\r\n    }\r\n    // ------------------------------------------------------------------------------------------------------- //\r\n    class Bug extends Boid {\r\n      constructor() {\r\n        super()\r\n        this.location = p.createVector(p.random(p.windowWidth), p.random(p.height-500, canvasHeight))\r\n        this.maxForce = 0.01\r\n        this.maxSpeed = 4\r\n        this.perceptionRadius = 250\r\n      }\r\n      move() {\r\n        this.location.add(this.velocity)\r\n        this.velocity.add(this.acceleration)\r\n        this.velocity.limit(this.maxSpeed)\r\n      }\r\n\r\n      contain() {\r\n        let perceptionRadius = 50\r\n        let steering = p.createVector()\r\n        let diff = p.createVector()\r\n        const limitLocationBottom = p.createVector(this.location.x, p.height)\r\n        const limitLocationTop = p.createVector(this.location.x, p.height-700)\r\n        const distBottom = p.dist(this.location.x, this.location.y, limitLocationBottom.x, limitLocationBottom.y)\r\n        const distTop = p.dist(this.location.x, this.location.y, limitLocationTop.x, limitLocationTop.y)\r\n        if (distBottom < perceptionRadius) {\r\n          diff = p5.Vector.sub(this.location, limitLocationBottom)\r\n          diff.div(distBottom)\r\n          steering.add(diff)\r\n          steering.setMag(this.maxSpeed)\r\n          steering.sub(this.velocity)\r\n          steering.limit(0.08)\r\n        } else if (distTop < perceptionRadius) {\r\n          diff = p5.Vector.sub(this.location, limitLocationTop)\r\n          diff.div(distTop)\r\n          steering.add(diff)\r\n          steering.setMag(this.maxSpeed)\r\n          steering.sub(this.velocity)\r\n          steering.limit(0.08)\r\n        }\r\n        return steering\r\n      }\r\n      flock(boids) {\r\n        let alignment = this.align(boids)\r\n        let cohesion = this.cohesion(boids)\r\n        let contain = this.contain()\r\n        this.acceleration.add(alignment)\r\n        this.acceleration.add(cohesion)\r\n        this.acceleration.add(contain)\r\n      }\r\n    }\r\n    // -------------------------------------------- BIRD ----------------------------------------------------------- //\r\n    class Bird extends Boid {\r\n      constructor() {\r\n        super()\r\n        this.location = p.createVector(p.random(p.windowWidth), p.random(400, canvasHeight-700))\r\n        this.maxForce = 0.1\r\n        this.maxSpeed = 3\r\n        this.perceptionRadius = 300\r\n        this.diameter = 10\r\n        this.color = p.color(0)\r\n      }\r\n\r\n      display() {\r\n        let triangleSize = 20\r\n        p.fill(0, 20, 40)\r\n        // p.stroke(255)\r\n        p.push();\r\n        p.translate(this.location.x, this.location.y)\r\n        p.rotate(this.velocity.heading() - p.radians(90))\r\n        p.triangle(0,0,triangleSize,0,triangleSize / 2, triangleSize * 1.2)\r\n        p.pop()\r\n      }\r\n    }\r\n\r\n    // volcanoes(p.windowWidth/5, canvasHeight-100)\r\n    // volcanoes(p.windowWidth*0.8, canvasHeight-100)\r\n  }\r\n\r\n// ______________________________________________________________________________________________________ //\r\n  componentDidMount() {\r\n    this.myP5 = new p5(this.Tree, this.myRef.current)\r\n  }\r\n\r\n  render() {\r\n    return <div ref={this.myRef}>\r\n    </div>\r\n  }\r\n}\r\n\r\n\r\nexport default Tree\r\n","import React from 'react'\nimport { Ocean } from './components/Ocean'\nimport Tree from './components/Tree'\nimport './App.css'\n\nfunction App() {\n\n  return <div className=\"App\">\n      <div>NAVBAR</div>\n      <div>\n      <Tree />\n      <Ocean />\n        <div>About</div>\n      </div>\n\n      <div>\n        <div>Projects</div>\n        <div class='container'>Hello my name is james\n          <div class='box'>Example text here...</div>\n          <div class='box'>Example text here...</div>\n          <div class='box'>Example text here...</div>\n          <div class='box'>Example text here...</div>\n        </div>\n      </div>\n      <div class='box'>FOOTER</div>\n    </div>\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}